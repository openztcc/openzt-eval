{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"error: expected `;`, found keyword `let`\n  --> src/main.rs:12:15\n   |\n12 |     let z = 42\n   |               ^ help: add `;` here\n...\n15 |     let mut s = String::from(\"hello\");\n   |     --- unexpected token\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"add `;` here","rendered":null,"spans":[{"byte_end":233,"byte_start":233,"column_end":15,"column_start":15,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","text":[{"highlight_end":15,"highlight_start":15,"text":"    let z = 42"}]}]}],"code":null,"level":"error","message":"expected `;`, found keyword `let`","spans":[{"byte_end":269,"byte_start":266,"column_end":8,"column_start":5,"expansion":null,"file_name":"src/main.rs","is_primary":false,"label":"unexpected token","line_end":15,"line_start":15,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":8,"highlight_start":5,"text":"    let mut s = String::from(\"hello\");"}]},{"byte_end":233,"byte_start":233,"column_end":15,"column_start":15,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":12,"line_start":12,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":15,"text":"    let z = 42"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0425]: cannot find value `x` in this scope\n --> src/main.rs:3:32\n  |\n3 |     println!(\"Value of x: {}\", x);\n  |                                ^ not found in this scope\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find value `x` in this scope","spans":[{"byte_end":70,"byte_start":69,"column_end":33,"column_start":32,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":"not found in this scope","line_end":3,"line_start":3,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":33,"highlight_start":32,"text":"    println!(\"Value of x: {}\", x);"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0308]: mismatched types\n --> src/main.rs:6:18\n  |\n6 |     let y: i32 = \"not a number\";\n  |            ---   ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n  |            |\n  |            expected due to this\n\n","$message_type":"diagnostic","children":[],"code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","message":"mismatched types","spans":[{"byte_end":130,"byte_start":116,"column_end":32,"column_start":18,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":"expected `i32`, found `&str`","line_end":6,"line_start":6,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":32,"highlight_start":18,"text":"    let y: i32 = \"not a number\";"}]},{"byte_end":113,"byte_start":110,"column_end":15,"column_start":12,"expansion":null,"file_name":"src/main.rs","is_primary":false,"label":"expected due to this","line_end":6,"line_start":6,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":15,"highlight_start":12,"text":"    let y: i32 = \"not a number\";"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"error[E0425]: cannot find function `undefined_function` in this scope\n  --> src/main.rs:9:5\n   |\n9  |     undefined_function();\n   |     ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `unused_function`\n...\n21 | fn unused_function() {\n   | -------------------- similarly named function `unused_function` defined here\n\n","$message_type":"diagnostic","children":[{"children":[],"code":null,"level":"help","message":"a function with a similar name exists","rendered":null,"spans":[{"byte_end":185,"byte_start":167,"column_end":23,"column_start":5,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":"unused_function","suggestion_applicability":"MaybeIncorrect","text":[{"highlight_end":23,"highlight_start":5,"text":"    undefined_function();"}]}]}],"code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","message":"cannot find function `undefined_function` in this scope","spans":[{"byte_end":394,"byte_start":374,"column_end":21,"column_start":1,"expansion":null,"file_name":"src/main.rs","is_primary":false,"label":"similarly named function `unused_function` defined here","line_end":21,"line_start":21,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":21,"highlight_start":1,"text":"fn unused_function() {"}]},{"byte_end":185,"byte_start":167,"column_end":23,"column_start":5,"expansion":null,"file_name":"src/main.rs","is_primary":true,"label":null,"line_end":9,"line_start":9,"suggested_replacement":null,"suggestion_applicability":null,"text":[{"highlight_end":23,"highlight_start":5,"text":"    undefined_function();"}]}]}}
{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"Some errors have detailed explanations: E0308, E0425.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"Some errors have detailed explanations: E0308, E0425.","spans":[]}}
{"reason":"compiler-message","package_id":"path+file:///home/finn/Projects/cargo-orchestrator/test_projects/error_project#0.1.0","manifest_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"error_project","src_path":"/home/finn/Projects/cargo-orchestrator/test_projects/error_project/src/main.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"rendered":"For more information about an error, try `rustc --explain E0308`.\n","$message_type":"diagnostic","children":[],"code":null,"level":"failure-note","message":"For more information about an error, try `rustc --explain E0308`.","spans":[]}}